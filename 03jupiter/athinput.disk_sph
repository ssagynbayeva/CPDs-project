<comment>
problem   = Keplerian disk in spherical polar coordinates
reference = 
configure = --prob=disk --coord=spherical_polar

<job>
problem_id  = disk      # problem ID: basename of output filenames

<output1>
file_type   = hdf5       # VTK data dump
variable    = prim      #
dt          = 62.83185307179587      # time increment between outputs

<output2>
file_type   = hst       # History data dump
dt          = 0.6283185307179587    # time increment between outputs

<output3>
file_type   = rst       # Restart data dump
dt          = 62.83185307179587    # time increment between outputs

<time>
cfl_number  = 0.3       # The Courant, Friedrichs, & Lewy (CFL) Number
nlim        = -1        # cycle limit
tlim        = 628.3185307179587      # time limit 100 orbits = 100*2pi
integrator  = vl2       # time integration algorithm
xorder      = 2         # order of spatial reconstruction
ncycle_out  = 1         # interval for stdout summary info

<mesh>
nx1         = 168       # Number of zones in X1-direction
x1min       = 0.4       # minimum value of X1
x1max       = 2.5       # maximum value of X1
ix1_bc      = user      # Inner-X1 boundary condition flag
ox1_bc      = user      # Outer-X1 boundary condition flag
x1rat       = 1.003814     # non-uniform grid ratio

nx2         = 72        # Number of zones in X2-direction
x2min       = 1.3962634015954636    # 80 minimum value of X2
x2max       = 1.7453292519943295    # 100 maximum value of X2
ix2_bc      = user      # Inner-X2 boundary condition flag
ox2_bc      = user      # Outer-X2 boundary condition flag

nx3         = 576              # Number of zones in X3-direction
x3min       = 0.0            # minimum value of X3
x3max       = 6.2831853071795862  # maximum value of X3
ix3_bc      = periodic       # Inner-X3 boundary condition flag
ox3_bc      = periodic       # Outer-X3 boundary condition flag

refinement  = static # Static Mesh Refinement

<refinement1>
x1min = 0.8 # radius 1-0.2
x1max = 1.2 #radius 1+0.2
x2min = 1.413716694115407 # 81
x2max = 1.727875959474386 # 99
x3min = 2.941592653589793 # 168.54084409738354
x3max = 3.3415926535897933 # 191.45915590261646
level = 2 # 2^2 = 4

<refinement2>
x1min = 0.9 # radius 1-0.1
x1max = 1.1 #radius 1+0.1
x2min = 1.4922565104551517 # 85.5
x2max = 1.6493361431346414 # 94.5
x3min = 3.041592653589793 # 174.27042204869178
x3max = 3.241592653589793 # 185.72957795130824
level = 3 # 2^3 = 8

<refinement3>
x1min = 0.95 # radius 1-0.05
x1max = 1.05 #radius 1+0.05
x2min = 1.5315264186250241 # 87.75
x2max = 1.6100662349647687 # 92.25
x3min = 3.0915926535897933 # 177.1352110243459
x3max = 3.191592653589793 # 182.8647889756541
level = 4 # 2^4 = 16

<meshblock>
nx1=24
nx2=24
nx3=24

<hydro>
gamma           = 1.4        # gamma = C_p/C_v
iso_sound_speed = 0.05        # isothermal sound speed
dfloor          = 1.e-9
pfloor          = 1.e-12

<orbital_advection>
orbital_splitting_order = 1
OAorder         = 2        # 0: w/o OA, 1: w/ OA(1st), 2: w/ OA(2nd)
Omega0          = 1.000015      # angular velocity of the rotating system (optional)

<problem>
GM              = 1.0
# orbital_advection = true
r0              = 1.0
rho0            = 1.0
p0_over_r0      = 0.0025
pslope          = -3.5
dslope          = -0.83
rindamp         = 0.75
routdamp        = 1.25
# Omega0          = 1.000015
insert_time     = 0
# r_s             = 0.00000001 # 4% of a_bin
# luminosity      = 6e-11

<planets>
np              = 1
ind             = 1
mass0           = 0.9e-3 # 1 Jupiter masses
rsoft2          = 1.44e-4
nmax            = 1
x0              = -1
y0              = 0.0
z0              = 0.0
